Index: app/src/main/java/com/example/myapplication/User/LearnWord/word/source/SqlLiteHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.User.LearnWord.word.source;\r\n\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.SQLException;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.example.myapplication.User.DTO.Word;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.ArrayList;\r\n\r\npublic class SqlLiteHelper extends SQLiteOpenHelper {\r\n    Context context;\r\n    String dbName;\r\n    String dbPath;\r\n    private static final int DATABASE_VERSION = 1;\r\n\r\n    public SqlLiteHelper(Context context, String dbName, int version) {\r\n        super(context, dbName, null, version);\r\n        this.context = context;\r\n        this.dbName = dbName;\r\n\r\n        SQLiteDatabase database = this.getReadableDatabase();\r\n        String filePath = database.getPath();\r\n        database.close();\r\n        this.dbPath =filePath;\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n        throw new SQLException(\"Can't downgrade database from version \" +\r\n                oldVersion + \" to \" + newVersion);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase sqLiteDatabase) {\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase sqLiteDatabase, int i, int i1) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onConfigure(SQLiteDatabase db) {\r\n        super.onConfigure(db);\r\n        db.disableWriteAheadLogging();\r\n\r\n    }\r\n\r\n    public void checkDb() {\r\n        SQLiteDatabase checkDb = null;\r\n        String filePath = dbPath;\r\n\r\n        try {\r\n            checkDb = SQLiteDatabase.openDatabase(filePath, null, 0);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        if (checkDb!= null) {\r\n            CopyDatabase();\r\n        } else if(checkDb==null) {\r\n            Toast.makeText(context, filePath, Toast.LENGTH_SHORT).show();\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private void CopyDatabase() {\r\n        context.deleteDatabase(dbName);\r\n        this.getReadableDatabase();\r\n        try {\r\n\r\n            InputStream ios = context.getAssets().open(dbName);\r\n\r\n            OutputStream os = new FileOutputStream(dbPath);\r\n\r\n\r\n            byte[] buffer = new byte[1024];\r\n\r\n            int len;\r\n            while ((len = ios.read(buffer)) > 0) {\r\n                os.write(buffer, 0, len);\r\n\r\n            }\r\n\r\n            os.flush();\r\n            ios.close();\r\n            os.close();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        Log.d(\"Copy db\", \"CopyDatabase: coppied \");\r\n    }\r\n\r\n    public void OpenDatabase() {\r\n        String filePath = dbPath ;\r\n        SQLiteDatabase.openDatabase(filePath, null, 0);\r\n    }\r\n\r\n\r\n    public void fetchData(ArrayList<Word> listOfWord, int page)    {\r\n    try {\r\n        listOfWord.clear();\r\n        int startPosition = page * 30;\r\n        int endPosition = startPosition + 30 - 1;\r\n        if (page == 0) {\r\n            startPosition = page + 100;\r\n            endPosition = page + 38 - 1;\r\n        }\r\n\r\n\r\n        SQLiteDatabase sqLiteDatabase = this.getReadableDatabase();\r\n        //add a column if it not exist\r\n\r\n        Cursor cursor = sqLiteDatabase.rawQuery(\"select * from av LIMIT \"\r\n                + startPosition + \",\" + endPosition, null, null);\r\n\r\n        if(cursor != null){\r\n\r\n\r\n            while (cursor.moveToNext()) {\r\n\r\n                Word addItem = new Word(Integer.parseInt(cursor.getString(0)),\r\n                        cursor.getString(1).toString(), cursor.getString(2).toString(),cursor.getString(3).toString(),\r\n                        cursor.getString(4).toString()\r\n                );\r\n                listOfWord.add(addItem);\r\n            } }\r\n        cursor.close();\r\n        sqLiteDatabase.close();\r\n    }catch (Exception ex){\r\n        ex.printStackTrace();\r\n    }\r\n\r\n    }\r\n    public void fetchRandomWord(String word,ArrayList<String> listItem){\r\n\r\n        listItem.clear();\r\n        char firstLetter = word.charAt(0);\r\n\r\n        SQLiteDatabase sqLiteDatabase = this.getReadableDatabase();\r\n        //add a column if it not exist\r\n\r\n        Cursor cursor = sqLiteDatabase.rawQuery(\"  select * from av where word like '\"+firstLetter+\"%' ORDER BY RANDOM() LIMIT 3\", null, null);\r\n\r\n        if(cursor != null){\r\n\r\n\r\n            while (cursor.moveToNext()) {\r\n\r\n                String item = cursor.getString(1);\r\n                listItem.add(item);\r\n            } }\r\n        cursor.close();\r\n        sqLiteDatabase.close();\r\n\r\n\r\n    }\r\n    public String getHtmlTextByWord(String word){\r\n        SQLiteDatabase sqLiteDatabase = this.getReadableDatabase();\r\n        Cursor cursor = sqLiteDatabase.rawQuery(\"  select * from av where word like '\"+word+\"'\", null, null);\r\n        if(cursor!=null && cursor.moveToFirst()){\r\n            String temp =\"<h1>\"+cursor.getString(2)+\"</h1>\";\r\n            sqLiteDatabase.close();\r\n            cursor.close();\r\n            return  temp;\r\n        }\r\n        else {\r\n            String temp =\"<h1>The detail of word is currently update</h1>\";\r\n            sqLiteDatabase.close();\r\n            cursor.close();\r\n            return temp;\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/User/LearnWord/word/source/SqlLiteHelper.java b/app/src/main/java/com/example/myapplication/User/LearnWord/word/source/SqlLiteHelper.java
--- a/app/src/main/java/com/example/myapplication/User/LearnWord/word/source/SqlLiteHelper.java	(revision 87be1a1ca486a2e519cfcd63d88d0125c201d22a)
+++ b/app/src/main/java/com/example/myapplication/User/LearnWord/word/source/SqlLiteHelper.java	(date 1635434564024)
@@ -12,6 +12,7 @@
 
 import com.example.myapplication.User.DTO.Word;
 
+import java.io.File;
 import java.io.FileOutputStream;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -65,18 +66,19 @@
         String filePath = dbPath;
 
         try {
-            checkDb = SQLiteDatabase.openDatabase(filePath, null, 0);
+            File sqlite =  context.getDatabasePath(dbName);
+            Toast.makeText(context,  context.getDatabasePath(dbName).exists()+"", Toast.LENGTH_SHORT).show();
+            if (!sqlite.exists())
+            {
+                CopyDatabase();
+            }
+
+
         } catch (Exception e) {
             e.printStackTrace();
         }
 
-        if (checkDb!= null) {
-            CopyDatabase();
-        } else if(checkDb==null) {
-            Toast.makeText(context, filePath, Toast.LENGTH_SHORT).show();
 
-
-        }
     }
 
     private void CopyDatabase() {
Index: app/src/main/java/com/example/myapplication/User/LearnWord/word/WordScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.User.LearnWord.word;\r\n\r\nimport android.media.MediaPlayer;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.widget.SearchView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.example.myapplication.R;\r\nimport com.example.myapplication.User.LearnWord.word.source.MySingleton;\r\nimport com.example.myapplication.User.LearnWord.word.source.SqlLiteHelper;\r\nimport com.example.myapplication.User.DTO.Word;\r\n\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class WordScreen extends AppCompatActivity{\r\n\r\n    SearchView searchView;\r\n\r\n    Button prevPage,nextPage;\r\n    private RecyclerView danhsach;\r\n    TextView currentPage;\r\n    int page = 0;\r\n\r\n    ArrayList<Word> wordItems = new ArrayList<>();\r\n\r\n\r\n    WordAdapter adapter;\r\n    SqlLiteHelper databaseHelper;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.word_screen);\r\n\r\n\r\n\r\n        prepareSQL();\r\n\r\n        setControl();\r\n\r\n        setEvent();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    private void prepareSQL() {\r\n         databaseHelper = new SqlLiteHelper(this,\"Dictionary.db\",3);\r\n        try {\r\n            databaseHelper.checkDb();\r\n        }catch (Exception e){e.printStackTrace();}\r\n\r\n        try {\r\n            databaseHelper.OpenDatabase();\r\n\r\n        }catch (Exception e){e.printStackTrace();}\r\n    }\r\n\r\n    private void setEvent() {\r\n        pageniteAndAPI(wordItems);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    private void pageniteAndAPI(ArrayList<Word> wordList){\r\n        databaseHelper.fetchData(wordList,page);\r\n        adapter.notifyDataSetChanged();\r\n\r\n\r\n\r\n        prevPage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(page ==0){\r\n\r\n                }\r\n                else{\r\n\r\n                    wordList.clear();\r\n                    page = page -1;\r\n                    currentPage.setText(page+\"\");\r\n                    databaseHelper.fetchData(wordList,page);\r\n                    adapter.notifyDataSetChanged();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        nextPage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                wordList.clear();\r\n                page = page +1;\r\n                currentPage.setText(page+\"\");\r\n\r\n                databaseHelper.fetchData(wordList,page);\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void setControl() {\r\n\r\n        prevPage = findViewById(R.id.word_btn_prvPage);\r\n        nextPage = findViewById(R.id.word_btn_nextPage);\r\n        currentPage = findViewById(R.id.word_txt_currentPage);\r\n\r\n        //searchView =  (SearchView) findViewById(R.id.simpleSearchView);\r\n        danhsach =(RecyclerView) findViewById(R.id.word_recycleItem);\r\n\r\n\r\n         adapter= new WordAdapter(getBaseContext(), wordItems,databaseHelper);\r\n        RecyclerView.LayoutManager layoutManager = new GridLayoutManager(this, 1);// Tạo layout manager\r\n        danhsach.setItemAnimator(new DefaultItemAnimator());// Gán hiệu ứng cho Recyclerview\r\n        danhsach.setLayoutManager(layoutManager);// Gán layout manager cho recyclerview\r\n        danhsach.setAdapter(adapter);//gán adapter cho Recyclerview.\r\n\r\n\r\n    }\r\n\r\n    //lay ra file am thanh cua tu` tren api\r\n\r\n\r\n\r\n }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/User/LearnWord/word/WordScreen.java b/app/src/main/java/com/example/myapplication/User/LearnWord/word/WordScreen.java
--- a/app/src/main/java/com/example/myapplication/User/LearnWord/word/WordScreen.java	(revision 87be1a1ca486a2e519cfcd63d88d0125c201d22a)
+++ b/app/src/main/java/com/example/myapplication/User/LearnWord/word/WordScreen.java	(date 1635434369260)
@@ -66,9 +66,9 @@
 
     private void prepareSQL() {
          databaseHelper = new SqlLiteHelper(this,"Dictionary.db",3);
-        try {
-            databaseHelper.checkDb();
-        }catch (Exception e){e.printStackTrace();}
+//        try {
+//            databaseHelper.checkDb();
+//        }catch (Exception e){e.printStackTrace();}
 
         try {
             databaseHelper.OpenDatabase();
Index: app/src/main/java/com/example/myapplication/User/LearnWord/practice/PracticeScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.User.LearnWord.practice;\r\n\r\nimport android.content.Intent;\r\nimport android.media.MediaPlayer;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.example.myapplication.R;\r\n\r\n\r\nimport com.example.myapplication.User.LearnWord.saveWord.source.SaveSqliteHelper;\r\nimport com.example.myapplication.User.LearnWord.vocubulary.VocabularyScreen;\r\nimport com.example.myapplication.User.LearnWord.word.source.MySingleton;\r\nimport com.example.myapplication.User.LearnWord.word.source.SqlLiteHelper;\r\nimport com.example.myapplication.User.DTO.Word;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.FirebaseApp;\r\n\r\nimport com.google.firebase.ml.common.modeldownload.FirebaseModelDownloadConditions;\r\nimport com.google.firebase.ml.naturallanguage.FirebaseNaturalLanguage;\r\nimport com.google.firebase.ml.naturallanguage.translate.FirebaseTranslateLanguage;\r\nimport com.google.firebase.ml.naturallanguage.translate.FirebaseTranslator;\r\nimport com.google.firebase.ml.naturallanguage.translate.FirebaseTranslatorOptions;\r\n\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class PracticeScreen extends AppCompatActivity {\r\n\r\n    private RecyclerView danhsach;\r\n\r\n     ArrayList<String> listAnswer = new ArrayList<>();\r\n     ArrayList<Boolean> listOfResult = new ArrayList<Boolean>();\r\n    private String result = \"\";\r\n    //list of word get from sqlite\r\n     ArrayList<Word> listItem = new ArrayList<>();\r\n    private SaveSqliteHelper sqliteHelper;\r\n    private SqlLiteHelper databaseHelper;\r\n    private PracticeAdapter adapter;\r\n    private MediaPlayer player;\r\n\r\n    private ImageView speakerIcon,showHint;\r\n    private Button submitButton;\r\n    private TextView hintText, questionText;\r\n    int currentpos = 0;\r\n    FirebaseApp firebaseApp ;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        firebaseApp.initializeApp(PracticeScreen.this);\r\n//        firebaseApp.getApplicationContext();\r\n\r\n        setContentView(R.layout.practive_screen);\r\n\r\n\r\n        sqliteHelper = new SaveSqliteHelper(getBaseContext());\r\n        //lay du lieu saveword trong sqlite roi dua vao list\r\n        sqliteHelper.fetchData(listItem);\r\n        //random list\r\n        Collections.shuffle(listItem);\r\n        ///-----------------------------///\r\n\r\n        prepareSQL();\r\n\r\n        setControl();\r\n        setEvent();\r\n        AddItem();\r\n        if (listItem.size() == 0) {\r\n            ifDataIsNull();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private void setEvent() {\r\n        AddItem();\r\n        submitButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                try {\r\n                    if (currentpos < listItem.size()-1&&currentpos<10) {\r\n                        currentpos = currentpos + 1;\r\n//                        listAnswer.clear();\r\n                        AddItem();\r\n\r\n                    } else {\r\n                      //  listAnswer.clear();\r\n                        setAdapter(1);\r\n                        afterThePractice();\r\n                    }\r\n                } catch (Exception ex) {\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void prepareSQL() {\r\n        databaseHelper = new SqlLiteHelper(this, \"Dictionary.db\", 3);\r\n        try {\r\n            databaseHelper.checkDb();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        try {\r\n            databaseHelper.OpenDatabase();\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void setControl() {\r\n        speakerIcon = findViewById(R.id.practice_imgSpeak);\r\n        showHint = findViewById(R.id.practice_imgShowHint);\r\n        submitButton = findViewById(R.id.practice_btnSubmit);\r\n        hintText = findViewById(R.id.practice_txt_hint);\r\n        //checkingText = findViewById(R.id.practice_txtCheckAnswer);\r\n        danhsach = (RecyclerView) findViewById(R.id.practice_rclAnswer);\r\n\r\n    }\r\n\r\n    private void setAdapter(int resultPos){\r\n        adapter = new PracticeAdapter(getBaseContext(), listAnswer, resultPos,listOfResult);\r\n        RecyclerView.LayoutManager layoutManager = new GridLayoutManager(this, 2);// Tạo layout manager\r\n        danhsach.setItemAnimator(new DefaultItemAnimator());// Gán hiệu ứng cho Recyclerview\r\n        danhsach.setLayoutManager(layoutManager);// Gán layout manager cho recyclerview\r\n        danhsach.setAdapter(adapter);//gán adapter cho Recyclerview.\r\n\r\n    }\r\n    private void AddItem() {\r\n        try {\r\n            //reset the hint\r\n            //save word get from sqlite to listitem\r\n            hintText.setText(\"\");\r\n            databaseHelper.fetchRandomWord(listItem.get(currentpos).getWord(), listAnswer);\r\n            //get  word to a new list\r\n            listAnswer.add(listItem.get(currentpos).getWord());\r\n            Collections.shuffle(listAnswer);\r\n            Toast.makeText(getBaseContext(),  listAnswer.get(0), Toast.LENGTH_SHORT).show();\r\n\r\n            setAdapter(getResultPos(listAnswer,listItem.get(currentpos).getWord()));\r\n            //set am thanh\r\n            speakerIcon.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    try {\r\n                        getAudioLink(listItem.get(currentpos).getWord());\r\n                    } catch (Exception ex) {\r\n                        ex.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            });\r\n            //set hint\r\n            showHint.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                // translateText(listItem.get(currentpos).getWord().toString(),hintText);\r\n                 hintText.setText(listItem.get(currentpos).getWord());\r\n                }\r\n            });\r\n\r\n            adapter.notifyDataSetChanged();\r\n\r\n\r\n        } catch (Exception ex) {\r\n            ex.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void afterThePractice() {\r\n        listAnswer.clear();\r\n        speakerIcon.setVisibility(View.GONE);\r\n        hintText.setText(\"Your Score is:\"+getScore()+\"/\"+listItem.size());\r\n        hintText.setTextSize(30);\r\n        submitButton.setText(\"Return to main\");\r\n        submitButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getBaseContext(), VocabularyScreen.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        adapter.notifyDataSetChanged();\r\n    }\r\n\r\n    private int getScore() {\r\n        int score=0;\r\n        for (Boolean i:listOfResult\r\n             ) {\r\n            if(i==true){\r\n                score++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    private void ifDataIsNull() {\r\n\r\n        speakerIcon.setVisibility(View.GONE);\r\n\r\n        submitButton.setText(\"Return to main\");\r\n        submitButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getBaseContext(), VocabularyScreen.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getAudioLink(String word) {\r\n        //lay ra chuoi trong search view\r\n        String url = \"https://api.dictionaryapi.dev/api/v2/entries/en/\" + word;\r\n\r\n        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest(Request.Method.GET, url, null,\r\n                new Response.Listener<JSONArray>() {\r\n\r\n                    @Override\r\n                    public void onResponse(JSONArray response) {\r\n\r\n                        try {\r\n                            JSONObject jsonObject = response.getJSONObject(0);\r\n                            JSONArray jsonArray = jsonObject.getJSONArray(\"phonetics\");\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(0);\r\n                            String audio = jsonObject1.getString(\"audio\");\r\n\r\n                            PlaySong(audio);\r\n\r\n                        } catch (Exception exception) {\r\n                            Toast.makeText(getBaseContext(), \"bug found.\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Toast.makeText(getBaseContext(), \"am thanh khong co san....\", Toast.LENGTH_SHORT).show();\r\n\r\n            }\r\n        });\r\n        MySingleton.getInstance(getBaseContext()).addToRequestQueue(jsonArrayRequest);\r\n\r\n        //goi len api\r\n\r\n        //yeu cau api gui ve file json\r\n\r\n\r\n    }\r\n\r\n    private void PlaySong(String url) {\r\n        try {\r\n            Toast.makeText(getBaseContext(), url, Toast.LENGTH_SHORT).show();\r\n            Uri uri = Uri.parse(\"https:\" + url);\r\n            player = new MediaPlayer();\r\n            player.setDataSource(getBaseContext(), uri);\r\n            player.prepare();\r\n            player.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {\r\n                @Override\r\n                public void onPrepared(MediaPlayer mp) {\r\n                    mp.start();\r\n                }\r\n            });\r\n        } catch (Exception exception) {\r\n            Log.d(exception.toString(), \"PlaySong: \");\r\n        }\r\n\r\n    }\r\n    private void translateText(String word,TextView txt_temp) {\r\n        try {\r\n            firebaseApp.initializeApp(PracticeScreen.this);\r\n            FirebaseTranslatorOptions options = new FirebaseTranslatorOptions.Builder()\r\n                    .setSourceLanguage(FirebaseTranslateLanguage.EN)\r\n                    .setTargetLanguage(FirebaseTranslateLanguage.VI)\r\n                    .build();\r\n            FirebaseTranslator translator = FirebaseNaturalLanguage.getInstance(firebaseApp).getTranslator(options);\r\n\r\n            FirebaseModelDownloadConditions conditions = new FirebaseModelDownloadConditions.Builder().build();\r\n\r\n            translator.downloadModelIfNeeded(conditions).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void unused) {\r\n\r\n\r\n                    translator.translate(word).addOnSuccessListener(new OnSuccessListener<String>() {\r\n                        @Override\r\n                        public void onSuccess(String s) {\r\n\r\n\r\n                            txt_temp.setText(s);\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            e.printStackTrace();\r\n                                }\r\n                    });\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            });\r\n\r\n        } catch (Exception ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n    private int getResultPos(ArrayList<String> list,String answer){\r\n        int pos =0;\r\n        for (String i:list)\r\n        {\r\n\r\n            if(answer.equals(i)){\r\n                 break;\r\n             }\r\n            pos++;\r\n\r\n        }\r\n        return pos;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/User/LearnWord/practice/PracticeScreen.java b/app/src/main/java/com/example/myapplication/User/LearnWord/practice/PracticeScreen.java
--- a/app/src/main/java/com/example/myapplication/User/LearnWord/practice/PracticeScreen.java	(revision 87be1a1ca486a2e519cfcd63d88d0125c201d22a)
+++ b/app/src/main/java/com/example/myapplication/User/LearnWord/practice/PracticeScreen.java	(date 1635434389715)
@@ -118,11 +118,11 @@
 
     private void prepareSQL() {
         databaseHelper = new SqlLiteHelper(this, "Dictionary.db", 3);
-        try {
-            databaseHelper.checkDb();
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
+//        try {
+//            databaseHelper.checkDb();
+//        } catch (Exception e) {
+//            e.printStackTrace();
+//        }
         try {
             databaseHelper.OpenDatabase();
 
