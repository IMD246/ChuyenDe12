Index: app/src/main/java/com/example/myapplication/Admin/DAO/DAOLevel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication.Admin.DAO;\r\n\r\nimport android.content.Context;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.example.myapplication.Admin.DTO.Level;\r\nimport com.example.myapplication.Admin.Adapter.LevelAdapter;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DAOLevel {\r\n    private List<Level> levelList;\r\n    private DatabaseReference databaseReference;\r\n\r\n    public List<Level> getLevelList() {\r\n        return levelList;\r\n    }\r\n\r\n    private Context context;\r\n\r\n    public DAOLevel(Context context) {\r\n        this.context = context;\r\n        levelList = new ArrayList<>();\r\n        databaseReference = FirebaseDatabase.getInstance().getReference(\"listlevel\");\r\n    }\r\n    public void getDataFromRealTimeToList(LevelAdapter levelAdapter) {\r\n        databaseReference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (levelList != null) {\r\n                    levelList.clear();\r\n                }\r\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                    Level level = dataSnapshot.getValue(Level.class);\r\n                    levelList.add(level);\r\n                }\r\n                if (levelAdapter != null)\r\n                {\r\n                    levelAdapter.notifyDataSetChanged();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Toast.makeText(context, \"Get list Level failed\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void addDataToFireBase(EditText editText) {\r\n        boolean[] check = new boolean[2];\r\n        int s = 1;\r\n        String namelevel = editText.getText().toString().trim();\r\n        for (int i = 0; i < check.length; i++) {\r\n            check[i] = true;\r\n        }\r\n        if (namelevel.isEmpty() || namelevel.length() == 0) {\r\n            check[0] = false;\r\n        } else {\r\n            if (levelList.size() > 0)\r\n            {\r\n                for (Level level1 : levelList) {\r\n                    if (Integer.parseInt(namelevel) == level1.getNameLevel()) {\r\n                        check[1] = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (check[0] == false) {\r\n            editText.setError(\"Không để trống\");\r\n            editText.requestFocus();\r\n        } else if (check[1] == false) {\r\n            editText.setError(\"Trùng dữ liệu\");\r\n            editText.requestFocus();\r\n        } else {\r\n            if (levelList.size() > 0)\r\n            {\r\n                s = levelList.get(levelList.size() - 1).getId() + 1;\r\n            }\r\n            Level level2 = new Level(s, Integer.parseInt(editText.getText().toString()));\r\n            databaseReference.child(String.valueOf(level2.getId())).setValue(level2).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    if (task.isComplete()) {\r\n                        Toast.makeText(context, \"Thêm thành công\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    public void editDataToFireBase(Level level, EditText editText) {\r\n        boolean[] check = new boolean[2];\r\n        for (int i = 0; i < check.length; i++) {\r\n            check[i] = true;\r\n        }\r\n        String namelevel = editText.getText().toString().trim();\r\n        if (namelevel.isEmpty() || namelevel.length() == 0) {\r\n            check[0] = false;\r\n        } else {\r\n            for (Level level1 : levelList) {\r\n                if (Integer.parseInt(namelevel) == level1.getNameLevel()) {\r\n                    check[1] = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (check[0] == false) {\r\n            editText.setError(\"Không để trống\");\r\n            editText.requestFocus();\r\n        } else if (check[1] == false) {\r\n            editText.setError(\"Trùng dữ liệu\");\r\n            editText.requestFocus();\r\n        } else {\r\n            Level level2 = new Level(level.getId(),Integer.parseInt(editText.getText().toString()));\r\n            databaseReference.child(String.valueOf(level2.getId())).setValue(level2).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    if (task.isComplete()) {\r\n                        Toast.makeText(context, \"Sửa thành công\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public void deleteDataToFire(Level level) {\r\n        databaseReference.child(String.valueOf(level.getId())).removeValue(new DatabaseReference.CompletionListener() {\r\n            @Override\r\n            public void onComplete(@Nullable DatabaseError error, @NonNull DatabaseReference ref) {\r\n                Toast.makeText(context, \"Xóa thành công\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/myapplication/Admin/DAO/DAOLevel.java b/app/src/main/java/com/example/myapplication/Admin/DAO/DAOLevel.java
--- a/app/src/main/java/com/example/myapplication/Admin/DAO/DAOLevel.java	(revision 8e71be8887dc8a7ff8e572d7f8366365e4397ac5)
+++ b/app/src/main/java/com/example/myapplication/Admin/DAO/DAOLevel.java	(date 1635762678617)
@@ -51,7 +51,6 @@
                     levelAdapter.notifyDataSetChanged();
                 }
             }
-
             @Override
             public void onCancelled(@NonNull DatabaseError error) {
                 Toast.makeText(context, "Get list Level failed", Toast.LENGTH_SHORT).show();
